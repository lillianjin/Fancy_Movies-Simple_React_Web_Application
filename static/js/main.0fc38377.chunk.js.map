{"version":3,"sources":["config.js","components/Details/Details.jsx","components/Home/Home.jsx","components/List/List.jsx","components/Details/Details0.jsx","components/App/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","apiURL","apiKey","Details","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","curr_index","tot_index","movieList","title","poster","overview","date","rating","getMovie","bind","assertThisInitialized","index","parseInt","match","params","content","location","cur","console","log","setState","length","poster_path","release_date","vote_average","curr","tot","react_default","a","createElement","className","Link","to","src","alt","Button","window","hash","react_fontawesome_index_es","icon","faImage","size","faList","pathname","concat","preview","faArrowAltCircleLeft","nextview","faArrowAltCircleRight","Component","Home","genreList","currGenre","getGenre","getMovieByGenre","_this2","axios","get","then","response","data","results","catch","error","_this3","genres","ob","_this4","id","_this5","map","genre","onClick","key","name","movies","movie","original_title","faStar","List","cur_res","cur_page","total_res","total_page","keyword","sort_by","order","inputChangeHandler","clickHandler","sortChange","orderChange","sortByTitle","sortByNum","getPopularMovie","total_results","event","target","value","b","attr","diff","popularity","toLowerCase","localeCompare","total_pages","page","newList","sort","faSearch","type","onChange","placeholder","Details0","App","HashRouter","Route","exact","path","component","Boolean","hostname","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0fc38377.chunk.js","sourcesContent":["module.exports= {\n  apiURL: 'https://api.themoviedb.org/3',\n  apiKey: '?api_key=f0d7d771d523ead5071f9e17e2674030'\n}\n","import React, { Component } from 'react'\nimport { Button, Input } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport './Details.css';\n\nimport axios from 'axios'\nimport {apiURL, apiKey} from '../../config.js'\nimport { faList, faImage, faStar, faArrowAltCircleRight, faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Details extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      curr_index: 0,\n      tot_index: 0,\n      movieList: [],\n      title: \"\",\n      poster: \"\",\n      overview: \"\",\n      date: \"\",\n      rating: 0\n    };\n    this.getMovie = this.getMovie.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMovie();\n  }\n\n  getMovie() {\n    // console.log(apiURL, apiKey);\n    const index = parseInt(this.props.match.params.index);\n    const content = this.props.location.state.movieList;\n    const cur = content[index];\n    console.log(cur);\n    this.setState({\n      curr_index: index,\n      tot_index: content.length,\n      movieList: content,\n      title: cur.title,\n      poster: cur.poster_path,\n      overview: cur.overview,\n      date: cur.release_date,\n      rating: cur.vote_average\n    });\n  }\n\n  preview() {\n    const curr = this.state.curr_index;\n    const tot = this.state.tot_index;\n    var i = curr>0 ? curr - 1 : tot-1;\n    return i;\n  }\n\n  nextview() {\n    const curr = this.state.curr_index;\n    const tot = this.state.tot_index;\n    var i = curr < tot-1 ? curr + 1 : 0;\n    return i;\n  }\n\n  render() {\n    const imgURL= 'https://image.tmdb.org/t/p/original';\n      return(\n        <div className='Details'>\n          <div className='header'>\n            <Link to = '/'>\n              <img className='logo' src='https://www.themoviedb.org/assets/2/v4/logos/312x276-primary-green-74212f6247252a023be0f02a5a45794925c3689117da9d20ffe47742a665c518.png' alt='logo'></img>\n            </Link>\n            <h1 className='title'>Fancy Movies</h1>\n            <div className=\"toggle-container\">\n              <Link to=\"/\">\n                <Button\n                  title=\"Gallery View\"\n                  className={window.location.hash==='#/' ? \"toggle-active toggle-button\": \"toggle-button\"}>\n                  <FontAwesomeIcon className=\"toggle-icon\" icon={faImage} size=\"2x\" />\n                </Button>\n              </Link>\n              <Link to=\"/list\">\n                <Button\n                  title=\"List View\"\n                  className={window.location.hash==='#/list' ? \"toggle-active toggle-button\": \"toggle-button\"}>\n                <FontAwesomeIcon className=\"toggle-icon\" icon={faList} size=\"2x\" />\n                </Button>\n              </Link>\n            </div>\n          </div>\n          <div className='detail-container'>\n            <Link to={\n              {\n                pathname: `/details0/${ this.preview() }`,\n                state: {\n                  movieList: this.state.movieList,\n                }\n              }\n            }>\n              <div className=\"arrow-left\">\n              <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n              </div>\n            </Link>\n            <img className='detail-poster' src={ imgURL + this.state.poster } alt='movie poster'></img>\n            <div className='detail-tag'>\n              <h2 className='detail-name'>\n                {this.state.title}\n              </h2>\n              <p className='detail-ab'>Release Date:&nbsp;</p>\n              <p className='detail-date'>\n                {this.state.date}\n              </p>\n              <p className='detail-ab'>Rating:&nbsp;</p>\n              <p className='detail-rating'>\n                {this.state.rating}/10\n              </p>\n              <p className='detail-ab'>Overview:&nbsp;</p>\n              <p className='detail-overview'>\n                {this.state.overview}\n              </p>\n            </div>\n            <Link to={\n              {\n                pathname: `/details0/${ this.nextview() }`,\n                state: {\n                  movieList: this.state.movieList,\n                }\n              }\n            }>\n              <div className=\"arrow-right\">\n              <FontAwesomeIcon icon={faArrowAltCircleRight} size=\"2x\" />\n              </div>\n            </Link>\n          </div>\n        </div>\n    )\n\n  }\n}\n\nexport default Details\n","import React, { Component } from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport { Button, Input } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport './Home.css';\nimport Details from '../Details/Details.jsx';\nimport PropTypes from 'prop-types';\n\nimport axios from 'axios'\nimport {apiURL, apiKey} from '../../config.js'\nimport { faStar, faList, faImage, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Home extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      movieList: [],\n      genreList: [],\n      currGenre: 0,\n    };\n\n    this.getMovie = this.getMovie.bind(this);\n    this.getGenre = this.getGenre.bind(this);\n    this.getMovieByGenre = this.getMovieByGenre.bind(this)\n  }\n\n  componentDidMount() {\n    this.getGenre();\n    this.getMovie();\n  }\n\n  getMovie() {\n    // console.log(apiURL, apiKey);\n    axios.get(`${apiURL}/movie/popular${apiKey}&language='en-us'`).then((response) => {\n        // console.log(response.data.results);\n        this.setState({\n          movieList: response.data.results,\n          currGenre: 0\n        });\n      }).catch((error) => {\n        console.log(error);\n    });\n  }\n\n  getGenre() {\n    // console.log(apiURL, apiKey);\n    axios.get(`${apiURL}/genre/movie/list${apiKey}&language='en-us'`).then((response) => {\n        // console.log(response.data.genres);\n        this.setState({\n          genreList: response.data.genres,\n        });\n      }).catch((error) => {\n        console.log(error);\n    });\n  }\n\n  getMovieByGenre(ob) {\n    axios.get(`${apiURL}/discover/movie${apiKey}&language='en-us'&with_genres=${ob.id}`).then((response) => {\n        // console.log(response.data.results);\n        this.setState({\n          movieList: response.data.results,\n          currGenre: ob.id\n        });\n      }).catch((error) => {\n        console.log(error);\n    });\n  }\n\n\n  render() {\n    console.log(movieList);\n    console.log(window.location);\n    const genres = this.state.genreList.map((genre, index)=> {\n      return (\n        <div className={this.state.currGenre === genre.id ? 'active genre' : 'genre'} onClick={() => this.getMovieByGenre(genre)} key={ genre.id }>\n          <p className='genre-name'> { genre.name }</p>\n        </div>\n      )\n    });\n\n    const imgURL= 'https://image.tmdb.org/t/p/original';\n    const movieList = this.state.movieList;\n    const movies= movieList.map((movie, index)=> {\n      return (\n        <div className=\"item-wrapper\" key = { index }>\n          <Link to={\n            {\n              pathname: `/details/${ index }`,\n              state: {\n                movieList: movieList,\n              }\n            }\n          }\n            className='gallery-item'\n            key={ movie.id }>\n              <img className='poster' src={ imgURL + movie.poster_path } alt='movie poster'></img>\n              <div className='tag'>\n                <h3 className='movie-name'>{ movie.original_title }</h3>\n                <p className='movie-rating'>\n                <FontAwesomeIcon icon={faStar} size=\"sm\" />\n                &nbsp;{ movie.vote_average }/10\n                </p>\n              </div>\n          </Link>\n        </div>\n        )\n      });\n\n      return(\n        <div className='Home'>\n          <div className='header'>\n          <Link to = '/'>\n            <img className='logo' src='https://www.themoviedb.org/assets/2/v4/logos/312x276-primary-green-74212f6247252a023be0f02a5a45794925c3689117da9d20ffe47742a665c518.png' alt='logo'></img>\n          </Link>\n          <h1 className='title'>Fancy Movies</h1>\n          <div className=\"toggle-container\">\n            <Link to=\"/\">\n              <Button\n                title=\"Gallery View\"\n                className={window.location.hash==='#/' ? \"toggle-active toggle-button\": \"toggle-button\"}>\n                <FontAwesomeIcon className=\"toggle-icon\" icon={faImage} size=\"2x\" />\n              </Button>\n            </Link>\n            <Link to=\"/list\">\n              <Button\n                title=\"List View\"\n                className={window.location.hash==='#/list' ? \"toggle-active toggle-button\": \"toggle-button\"}>\n              <FontAwesomeIcon className=\"toggle-icon\" icon={faList} size=\"2x\" />\n              </Button>\n            </Link>\n          </div>\n          </div>\n          <div className=\"filter-list\">\n            <div className=\"genre-list\">\n              <h3> Genre </h3>\n              <div className={this.state.currGenre === 0 ? 'active genre' : 'genre'} onClick={() => this.getMovie()} key={ 0 }>\n                <p className='genre-name'> All Genres</p>\n              </div>\n              {genres}\n            </div>\n          </div>\n          <div className='gallery'>\n            { movies }\n          </div>\n        </div>\n    )\n  }\n\n}\n\nHome.propTypes = {\n\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport { Button, Input } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport './List.css';\n\nimport axios from 'axios'\nimport {apiURL, apiKey} from '../../config.js'\nimport { faStar, faList, faImage, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass List extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      cur_res: 0,\n      cur_page: 0,\n      total_res: 0,\n      total_page: 0,\n      movieList: [],\n      keyword: \"\",\n      sort_by: \"title\",\n      order: \"asc\"\n    };\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.sortChange = this.sortChange.bind(this);\n    this.orderChange = this.orderChange.bind(this);\n    this.sortByTitle = this.sortByTitle.bind(this);\n    this.sortByNum = this.sortByNum.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPopularMovie();\n  }\n\n  getPopularMovie() {\n    // console.log(apiURL, apiKey);\n    axios.get(`${apiURL}/movie/popular${apiKey}&language='en-us'`).then((response) => {\n        // console.log(response.data.results);\n        this.setState({\n          total_res: response.data.total_results,\n          movieList: response.data.results,\n          cur_res: response.data.results.length,\n        });\n      }).catch((error) => {\n        console.log(error);\n    });\n  }\n\n  inputChangeHandler(event) {\n    this.setState({\n      keyword: event.target.value,\n    });\n    // console.log(this.state.keyword);\n  }\n\n  sortByNum(a, b, order, attr){\n    const diff = attr==='vote_average' ? (a.vote_average - b.vote_average) : (a.popularity - b.popularity);\n    if(order === 'asc'){\n      return diff;\n    } else {\n      return -1 * diff;\n    }\n  }\n\n  sortByTitle(a, b, order){\n    const diff = a.title.toLowerCase().localeCompare(b.title.toLowerCase());\n    if(order === 'asc'){\n      return diff;\n    } else {\n      return -1 * diff;\n    }\n  }\n\n\n  clickHandler(){\n    axios.get(`${apiURL}/search/movie${apiKey}&query=${this.state.keyword}&language='en-us'`).then((response) => {\n      console.log(response.data.results);\n      this.setState({\n        movieList: response.data.results,\n        total_res: response.data.total_results,\n        cur_res: response.data.results.length,\n        total_page: response.data.total_pages,\n        cur_page: response.data.page,\n      });\n      if(this.state.sort_by === 'title'){\n        const newList = this.state.movieList.sort((a, b) => this.sortByTitle(a, b, this.state.order));\n        this.setState({\n          movieList: newList,\n        });\n      } else {\n        const newList = this.state.movieList.sort((a, b) => this.sortByNum(a, b, this.state.order, this.state.sort_by));\n        this.setState({\n          movieList: newList,\n        });\n      }\n      console.log(this.state.movieList);\n      }).catch((error) => {\n        console.log(error);\n    });\n  }\n\n  orderChange(event){\n    this.setState({\n      order: event.target.value,\n    });\n  }\n\n  sortChange(event){\n    // console.log(event.target.value);\n    this.setState({\n      sort_by: event.target.value,\n    });\n  }\n\n  render() {\n    console.log(window.location);\n\n    const imgURL= 'https://image.tmdb.org/t/p/original';\n    const totalCount = this.state.total_res;\n\n    const movies= this.state.movieList.map((movie, index)=> {\n      return (\n        <Link to={\n          {\n            pathname: `/details/${ index }`,\n            state: {\n              movieList: this.state.movieList,\n            }\n          }\n        }\n          className='list-item'\n          key={ movie.id }>\n            <img className='list-poster' src={ imgURL + movie.poster_path } alt='movie poster'></img>\n            <div className='list-tag'>\n              <h3 className='list-movie-name'>{ movie.title }</h3>\n              <p className='list-movie-date'>\n                {movie.release_date}\n              </p>\n              <p className='list-movie-rating'>\n                <FontAwesomeIcon icon={faStar} size=\"sm\" />\n                &nbsp;{ movie.vote_average }/10\n              </p>\n              <p className='list-movie-overview'>\n                { movie.overview }\n              </p>\n            </div>\n          </Link>\n        )\n      });\n\n      return(\n        <div className='List'>\n          <div className='header'>\n          <Link to = '/list'>\n            <img className='logo' src='https://www.themoviedb.org/assets/2/v4/logos/312x276-primary-green-74212f6247252a023be0f02a5a45794925c3689117da9d20ffe47742a665c518.png' alt='logo'></img>\n          </Link>\n          <h1 className='title'>Fancy Movies</h1>\n            <div className=\"toggle-container\">\n              <Link to=\"/\">\n                <Button\n                  title=\"Gallery View\"\n                  className={window.location.hash==='#/' ? \"toggle-active toggle-button\": \"toggle-button\"}>\n                  <FontAwesomeIcon className=\"toggle-icon\" icon={faImage} size=\"2x\" />\n                </Button>\n              </Link>\n              <Link to=\"/list\">\n                <Button\n                  title=\"List View\"\n                  className={window.location.hash==='#/list' ? \"toggle-active toggle-button\": \"toggle-button\"}>\n                <FontAwesomeIcon className=\"toggle-icon\" icon={faList} size=\"2x\" />\n                </Button>\n              </Link>\n            </div>\n          </div>\n          <div className='search-container'>\n            <div className='search-bar'>\n              <FontAwesomeIcon className='search-icon' icon={faSearch} size=\"2x\" />\n              <input\n                type=\"text\"\n                onChange = {this.inputChangeHandler}\n                placeholder=\"Search Movies\"\n                className=\"search-input\"\n              />\n            </div>\n            <input\n              className=\"search-submit\"\n              onClick = {this.clickHandler}\n              type=\"button\"\n              value=\"Submit\"\n            />\n          </div>\n          <div className='sort-container-1'>\n            <p className='sort-word'>Sort&nbsp;by:&nbsp;</p>\n            <form className='sort-form'>\n              <select onChange= {this.sortChange}>\n                <option value='title'>Title</option>\n                <option value='vote_average'>Rating</option>\n                <option value='popularity'>Popularity</option>\n              </select>\n            </form>\n          </div>\n          <div className='total_res'>{ this.state.cur_res }&nbsp;of&nbsp;{ this.state.total_res }&nbsp;results</div>\n          <div className='sort-container-2'>\n            <p className='sort-word'>Order:&nbsp;</p>\n            <form className='sort-form'>\n              <select onChange={this.orderChange}>\n                <option value='asc'>Asending</option>\n                <option value='desc'>Desending</option>\n              </select>\n            </form>\n          </div>\n          <div className='list'>\n            { movies }\n          </div>\n        </div>\n    )\n  }\n}\n\nList.propTypes = {\n\n}\n\nexport default List\n","import React, { Component } from 'react'\nimport { Button, Input } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport './Details.css';\n\nimport axios from 'axios'\nimport {apiURL, apiKey} from '../../config.js'\nimport { faList, faImage, faStar, faArrowAltCircleRight, faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Details0 extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      curr_index: 0,\n      tot_index: 0,\n      movieList: [],\n      title: \"\",\n      poster: \"\",\n      overview: \"\",\n      date: \"\",\n      rating: 0\n    };\n    this.getMovie = this.getMovie.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMovie();\n  }\n\n  getMovie() {\n    const index = parseInt(this.props.match.params.index);\n    const content = this.props.location.state.movieList;\n    const cur = content[index];\n    console.log(content);\n    this.setState({\n      curr_index: index,\n      tot_index: content.length,\n      movieList: content,\n      title: cur.title,\n      poster: cur.poster_path,\n      overview: cur.overview,\n      date: cur.release_date,\n      rating: cur.vote_average\n    });\n  }\n\n  preview() {\n    const curr = this.state.curr_index;\n    const tot = this.state.tot_index;\n    var i = curr>0 ? curr - 1 : tot - 1;\n    return i;\n  }\n\n  nextview() {\n    const curr = this.state.curr_index;\n    const tot = this.state.tot_index;\n    var i = curr < tot-1 ? curr + 1 : 0;\n    return i;\n  }\n\n  render() {\n    const imgURL= 'http://image.tmdb.org/t/p/original';\n      return(\n        <div className='Details'>\n          <div className='header'>\n            <Link to = '/'>\n              <img className='logo' src='https://www.themoviedb.org/assets/2/v4/logos/312x276-primary-green-74212f6247252a023be0f02a5a45794925c3689117da9d20ffe47742a665c518.png' alt='logo'></img>\n              </Link>\n              <h1 className='title'>Fancy Movies</h1>\n              <div className=\"toggle-container\">\n                <Link to=\"/\">\n                  <Button\n                    title=\"Gallery View\"\n                    className={window.location.hash==='#/' ? \"toggle-active toggle-button\": \"toggle-button\"}>\n                    <FontAwesomeIcon className=\"toggle-icon\" icon={faImage} size=\"2x\" />\n                  </Button>\n                </Link>\n                <Link to=\"/list\">\n                  <Button\n                    title=\"List View\"\n                    className={window.location.hash==='#/list' ? \"toggle-active toggle-button\": \"toggle-button\"}>\n                  <FontAwesomeIcon className=\"toggle-icon\" icon={faList} size=\"2x\" />\n                  </Button>\n                </Link>\n              </div>\n          </div>\n          <div className='detail-container'>\n            <Link to={\n              {\n                pathname: `/details/${ this.preview() }`,\n                state: {\n                  movieList: this.state.movieList,\n                }\n              }\n            }>\n              <div className=\"arrow-left\">\n              <FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"2x\" />\n              </div>\n            </Link>\n            <img className='detail-poster' src={ imgURL + this.state.poster } alt='movie poster'></img>\n            <div className='detail-tag'>\n              <h2 className='detail-name'>\n                {this.state.title}\n              </h2>\n              <p className='detail-ab'>Release Date:&nbsp;</p>\n              <p className='detail-date'>\n                {this.state.date}\n              </p>\n              <p className='detail-ab'>Rating:&nbsp;</p>\n              <p className='detail-rating'>\n                {this.state.rating}/10\n              </p>\n              <p className='detail-ab'>Overview:&nbsp;</p>\n              <p className='detail-overview'>\n                {this.state.overview}\n              </p>\n            </div>\n            <Link to={\n              {\n                pathname: `/details/${ this.nextview() }`,\n                state: {\n                  movieList: this.state.movieList,\n                }\n              }\n            }>\n              <div className=\"arrow-right\">\n              <FontAwesomeIcon icon={faArrowAltCircleRight} size=\"2x\" />\n              </div>\n            </Link>\n          </div>\n        </div>\n    )\n\n  }\n}\n\nexport default Details0\n","import React, { Component } from 'react'\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport './App.css';\n// import history from './history';\n\n// Include your new Components here\nimport Home from '../Home/Home.jsx';\nimport List from '../List/List.jsx';\nimport Details from '../Details/Details.jsx';\nimport Details0 from '../Details/Details0.jsx';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"root\">\n        <Router>\n          <div>\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/list\" component={List}/>\n            <Route path=\"/details/:index\" component={Details}/>\n            <Route path=\"/details0/:index\" component={Details0}/>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}